{"version":3,"file":"static/js/492.27dfae0f.chunk.js","mappings":"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","sources":["components/Common/TextField.jsx","../node_modules/@mui/icons-material/esm/AddIcCall.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/icons-material/esm/Person.js","../node_modules/@mui/icons-material/esm/Clear.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { TextField } from '@mui/material';\nimport { useField } from 'formik';\n\nconst TextfieldWrapper = ({ name, ...otherProps }) => {\n  const [field, mata] = useField(name);\n\n  const configTextfield = {\n    ...field,\n    ...otherProps,\n    fullWidth: true,\n    variant: 'outlined',\n  };\n\n  if (mata && mata.touched && mata.error) {\n    configTextfield.error = true;\n    configTextfield.helperText = mata.error;\n  }\n\n  return <TextField {...configTextfield} color=\"secondary\" />;\n};\n\nexport default TextfieldWrapper;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 15.5c-1.25 0-2.45-.2-3.57-.57-.35-.11-.74-.03-1.02.24l-2.2 2.2c-2.83-1.44-5.15-3.75-6.59-6.59l2.2-2.21c.28-.26.36-.65.25-1C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1zM21 6h-3V3h-2v3h-3v2h3v3h2V8h3z\"\n}), 'AddIcCall');","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const getFilteredContacts = (contacts, filter) => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    };\n    const visibleContacts = getFilteredContacts(contacts, filter);\n    return visibleContacts;\n  }\n);\n","// import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Container, Grid, Typography, Button } from '@mui/material';\nimport { AddIcCall } from '@mui/icons-material';\nimport Textfield from '../Common/TextField';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n// import { Snackbar } from '../SnackBar/SnackBar';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup\n    .number()\n    .integer()\n    .typeError('Please enter a valid phone number')\n    .required(),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  // const [success, setSuccess] = useState(false);\n  // const [message, setMessage] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (\n      contacts.find(\n        element => element.name.toLowerCase() === values.name.toLowerCase()\n      )\n    ) {\n      // setMessage(`${values.name} is already in contacts`);\n      // setSuccess(true);\n      alert(`${values.name} is already in contacts`);\n    } else {\n      dispatch(addContact(values));\n      // setMessage(`${values.name} added to your phonebook`);\n      // setSuccess(true);\n    }\n    resetForm();\n    // setSuccess(false);\n  };\n\n  return (\n    <>\n      {' '}\n      <Container maxWidth=\"sm\">\n        <Formik\n          initialValues={initialValues}\n          validationSchema={schema}\n          onSubmit={handleSubmit}\n        >\n          <Form>\n            <Grid container spacing={2} columns={1}>\n              <Grid item xs={12}>\n                <Typography variant=\"h4\" component=\"h3\" align=\"center\" mb={2}>\n                  Add your new contact here\n                </Typography>\n              </Grid>\n\n              <Grid item xs={6}>\n                <Textfield name=\"name\" label=\"Name\" placeholder=\"James Bond\" />\n              </Grid>\n\n              <Grid item xs={6}>\n                <Textfield\n                  name=\"number\"\n                  label=\"Number\"\n                  placeholder=\"+380999614658\"\n                />\n              </Grid>\n              <Grid item xs={6}>\n                <Button\n                  variant=\"contained\"\n                  type=\"submit\"\n                  color=\"secondary\"\n                  fullWidth\n                  endIcon={<AddIcCall />}\n                >\n                  Add contact\n                </Button>\n              </Grid>\n            </Grid>\n          </Form>\n        </Formik>\n        {/* {success ? <Snackbar message={message} /> : null} */}\n      </Container>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <TextField\n      label=\"Find contacts by name\"\n      variant=\"filled\"\n      fullWidth\n      color=\"secondary\"\n      type=\"search\"\n      value={filter}\n      onChange={handleFilterChange}\n      sx={{\n        mb: '1.5rem',\n      }}\n    />\n  );\n};\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import { useDispatch } from 'react-redux';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport { Clear, Person } from '@mui/icons-material';\n\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { IconButton } from '@mui/material';\n\nexport const ContactItem = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <Grid item xs={8}>\n      <Card width=\"100%\" sx={{ display: 'flex', alignItems: 'center' }}>\n        <CardContent\n          sx={{\n            display: 'flex',\n            flexWrap: { xs: 'wrap', sm: 'noWrap', md: 'noWrap' },\n            alignItems: 'center',\n            justifyContent: 'start',\n            flexGrow: 1,\n          }}\n        >\n          <Person color=\"secondary\" />\n          <Typography variant=\"h6\" component=\"h3\" ml={2}>\n            {name}\n          </Typography>\n          <Typography variant=\"body1\" ml={2}>\n            {number}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleDelete}\n          >\n            <Clear />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { Grid } from '@mui/material';\nimport { ContactItem } from 'components/ContactList/ContactItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  if (visibleContacts.length === 0) {\n    return null;\n  }\n\n  return (\n    <Grid container spacing={2} columns={1} xs={12}>\n      {visibleContacts.map(contact => (\n        <ContactItem key={contact.id} contact={contact} />\n      ))}\n    </Grid>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Container, Grid, Typography } from '@mui/material';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\nimport ContactListImage from '../images/ContactListImage.jpg';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Typography variant=\"h3\" component=\"h1\" align=\"center\" mb={3} mt={3}>\n        Phonebook\n      </Typography>\n\n      <Grid\n        mb={3}\n        sx={{\n          display: 'flex',\n          flexWrap: { xs: 'wrap', sm: 'wrap', md: 'noWrap' },\n\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Grid item mb={3}>\n          <ContactForm />\n        </Grid>\n\n        <Grid item sx={{ width: { xs: '100%', sm: '100%', md: 800 } }}>\n          <Box\n            sx={{\n              backgroundImage: `url(${ContactListImage})`,\n              backgroundRepeat: 'no-repeat',\n              backgroundColor: 'black',\n              backgroundAttachment: 'fixed',\n              objectFit: 'cover',\n              height: 600,\n              width: '100%',\n            }}\n          >\n            <Box p={3}>\n              <Box\n                mb={2}\n                p={1}\n                sx={{\n                  background: 'white',\n                  opacity: '0.5',\n                }}\n                borderRadius={2}\n              >\n                <Typography variant=\"h4\" component=\"h2\" align=\"center\">\n                  Contacts\n                </Typography>\n              </Box>\n              <Filter />\n              {isLoading && !error && <Loader />}\n              <ContactList />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\n// import { useEffect, lazy } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Route, Routes } from 'react-router-dom';\n// import { GlobalStyle } from './GlobalStyle';\n// import { Container } from './Container';\n// import { ContactForm } from './ContactForm/ContactForm';\n// import { Filter } from './Filter/Filter';\n// import { ContactList } from './ContactList/ContactList';\n// import { selectIsLoading, selectError } from 'redux/contacts/selectors';\n// import { fetchContacts } from 'redux/contacts/operations';\n\n// export const App = () => {\n//   const dispatch = useDispatch();\n//   const isLoading = useSelector(selectIsLoading);\n//   const error = useSelector(selectError);\n\n//   useEffect(() => {\n//     dispatch(fetchContacts());\n//   }, [dispatch]);\n\n//   return (\n//     <Container>\n//       <GlobalStyle />\n//       <h1>Phonebook</h1>\n//   <ContactForm />\n//   <h2>Contacts</h2>\n//   <Filter />\n//   {isLoading && !error && <p>Request in progress...</p>}\n//   <ContactList />\n//     </Container>\n//   );\n// };\n"],"names":["name","otherProps","useField","field","mata","configTextfield","fullWidth","variant","touched","error","helperText","color","createSvgIcon","_jsx","d","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","selectFilter","filter","selectVisibleContacts","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","initialValues","number","schema","yup","shape","required","integer","typeError","ContactForm","useSelector","dispatch","useDispatch","Container","maxWidth","validationSchema","onSubmit","values","resetForm","element","alert","addContact","Grid","container","spacing","columns","item","xs","Typography","component","align","mb","label","placeholder","Button","type","endIcon","AddIcCall","Filter","onChange","e","setFilter","currentTarget","sx","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","as","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","display","alignItems","marginLeft","slots","ContactItem","id","width","flexWrap","sm","md","justifyContent","flexGrow","Person","ml","IconButton","size","edge","onClick","deleteContact","Clear","ContactList","Contacts","useEffect","fetchContacts","mt","Box","backgroundImage","ContactListImage","backgroundRepeat","backgroundColor","backgroundAttachment","objectFit","height","p","background","opacity","borderRadius","Loader"],"sourceRoot":""}